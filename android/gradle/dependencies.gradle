/*
 * Copyright (C) 2017. Uber Technologies
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

def versions = [
    androidx: [
        annotations: '1.1.0',
        appcompat: '1.3.0',
        compose: [
          compiler: "1.3.0",
          libraries: "1.2.1"
        ],
        percent: '1.0.0',
        savedState: "1.2.0"
    ],
    autodispose: '1.4.0',
    coroutines: '1.6.4',
    dagger: "2.43.2",
    errorProne: '2.3.3',
    gjf: '1.7',
    intellij: "2022.2.4",
    kotlin: "1.7.10",
    ktfmt: '0.23',
    ktlint: '0.41.0',
    motif: '0.3.4',
    robolectric: "4.4",
    spotless: '5.11.0',
    binaryCompatibilityValidator: "0.13.0"
]

def apt = [
    androidApi: "com.google.android:android:2.2.1",
    autoCommon: "com.google.auto:auto-common:0.8",
    autoService: "com.google.auto.service:auto-service:1.0-rc4",
    nullAway: 'com.uber.nullaway:nullaway:0.9.0',
    daggerCompiler: "com.google.dagger:dagger-compiler:${versions.dagger}",
    javapoet: "com.squareup:javapoet:1.11.1",
    javax: "javax.annotation:jsr250-api:1.0",
    javaxInject: "javax.inject:javax.inject:1",
    autoValue: "com.google.auto.value:auto-value:1.7",
    autoValueAnnotations: "com.google.auto.value:auto-value-annotations:1.7",
    errorProneAnnotations: "com.google.errorprone:error_prone_annotations:${versions.errorProne}",
]

def build = [
    buildToolsVersion: '33.0.0',
    compileSdkVersion: 33,
    ci: 'true' == System.getenv('CI'),
    minSdkVersion: 21,
    targetSdkVersion: 28,
    javaVersion: JavaVersion.VERSION_1_8,
    guavaJre: "com.google.guava:guava:27.1-jre",
    commonsLang: "commons-lang:commons-lang:2.6",
    intellijPlugin: "org.jetbrains.intellij.plugins:gradle-intellij-plugin:1.11.0",
    errorProne: "com.google.errorprone:error_prone_core:${versions.errorProne}",
    errorProneJavac: "com.google.errorprone:javac:9+181-r4173-1",
    errorProneCore: "com.google.errorprone:error_prone_core:${versions.errorProne}",
    errorProneTestHelpers: "com.google.errorprone:error_prone_test_helpers:${versions.errorProne}",
    nullAway: 'com.uber.nullaway:nullaway:0.9.0',
    gradlePlugins: [
        android: 'com.android.tools.build:gradle:7.2.2',
        apt: "net.ltgt.gradle:gradle-apt-plugin:0.21",
        errorprone: "net.ltgt.gradle:gradle-errorprone-plugin:1.3.0",
        gradleMavenPublish: "com.vanniktech:gradle-maven-publish-plugin:0.18.0",
        japicmp: 'me.champeau.gradle:japicmp-gradle-plugin:0.2.8',
        kapt: "org.jetbrains.kotlin:kotlin-gradle-plugin:${versions.kotlin}",
        kotlin: "org.jetbrains.kotlin:kotlin-gradle-plugin:${versions.kotlin}",
        nullaway: "net.ltgt.gradle:gradle-nullaway-plugin:1.0.2",
        spotless: "com.diffplug.spotless:spotless-plugin-gradle:${versions.spotless}",
        binaryCompatibilityValidator: "org.jetbrains.kotlinx:binary-compatibility-validator:${versions.binaryCompatibilityValidator}"
    ]
]

def androidx = [
    activity: "androidx.activity:activity:1.3.0-alpha08",
    activityCompose: "androidx.activity:activity-compose:1.3.0-beta02",
    activityKtx: "androidx.activity:activity-ktx:1.3.0-beta02",
    annotations: "androidx.annotation:annotation:${versions.androidx.annotations}",
    appcompat: "androidx.appcompat:appcompat:${versions.androidx.appcompat}",
    composeAnimation: "androidx.compose.animation:animation:${versions.androidx.compose.libraries}",
    composeCompiler: "androidx.compose.compiler:compiler:${versions.androidx.compose.compiler}",
    composeFoundation: "androidx.compose.foundation:foundation:${versions.androidx.compose.libraries}",
    composeMaterial: "androidx.compose.material:material:${versions.androidx.compose.libraries}",
    composeNavigation: "androidx.navigation:navigation-compose:2.4.0-alpha03",
    composeRuntimeRxJava2: "androidx.compose.runtime:runtime-rxjava2:${versions.androidx.compose.libraries}",
    composeUi: "androidx.compose.ui:ui:${versions.androidx.compose.libraries}",
    composeUiTooling: "androidx.compose.ui:ui-tooling:${versions.androidx.compose.libraries}",
    composeViewModel: "androidx.lifecycle:lifecycle-viewmodel-compose:1.0.0-alpha05",
    percent: "androidx.percentlayout:percentlayout:${versions.androidx.percent}",
    savedState: "androidx.savedstate:savedstate:${versions.androidx.savedState}"
]

def test = [
    junit: "junit:junit:4.12",
    mockito: "org.mockito:mockito-core:4.6.1",
    mockitoKotlin: "org.mockito.kotlin:mockito-kotlin:4.0.0",
    compileTesting: "com.google.testing.compile:compile-testing:0.17",
    truth: "com.google.truth:truth:0.43",
]

def external = [
    android: "com.google.android:android:4.1.1.4",
    checkerQual: "org.checkerframework:checker-qual:2.5.1",
    dagger: "com.google.dagger:dagger:${versions.dagger}",
    ddms: "com.android.tools.ddms:ddmlib:27.1.3",
    guavaAndroid: "com.google.guava:guava:27.1-android",
    gson: "com.google.code.gson:gson:2.8.7",
    flipper: "com.facebook.flipper:flipper:0.93.0",
    rxjava2: "io.reactivex.rxjava2:rxjava:2.2.8",
    rxrelay2: "com.jakewharton.rxrelay2:rxrelay:2.1.0",
    rxandroid2: "io.reactivex.rxjava2:rxandroid:2.1.1",
    reactiveStreams: "org.reactivestreams:reactive-streams:1.0.0",
    roboelectricBase: "org.robolectric:robolectric:${versions.robolectric}",
    rxbinding: 'com.jakewharton.rxbinding2:rxbinding:2.0.0',
    rxkotlin: 'io.reactivex.rxjava2:rxkotlin:2.2.0',
    leakcanaryDebug: 'com.squareup.leakcanary:leakcanary-android:1.5.4',

]

def kotlin = [
    coroutines: "org.jetbrains.kotlinx:kotlinx-coroutines-core:${versions.coroutines}",
    coroutinesAndroid: "org.jetbrains.kotlinx:kotlinx-coroutines-android:${versions.coroutines}",
    coroutinesRx2: "org.jetbrains.kotlinx:kotlinx-coroutines-rx2:${versions.coroutines}",
    coroutinesTest: "org.jetbrains.kotlinx:kotlinx-coroutines-test:${versions.coroutines}",
    stdlib: "org.jetbrains.kotlin:kotlin-stdlib:${versions.kotlin}"
]

def uber = [
    autodispose: "com.uber.autodispose:autodispose:${versions.autodispose}",
    autodisposeAndroid : "com.uber.autodispose:autodispose-android:${versions.autodispose}@aar",
    autodisposeLifecycle: "com.uber.autodispose:autodispose-lifecycle:${versions.autodispose}",
    autodisposeCoroutines: "com.uber.autodispose:autodispose-coroutines-interop:${versions.autodispose}",
    autodisposeErrorProne: "com.uber.autodispose:autodispose-error-prone:${versions.autodispose}",
    motif: "com.uber.motif:motif:${versions.motif}",
    motifCompiler: "com.uber.motif:motif-compiler:${versions.motif}",
]

ext.deps = [
    "androidx": androidx,
    "apt": apt,
    "build": build,
    "external": external,
    "kotlin": kotlin,
    "test": test,
    "uber": uber,
    "versions": versions
]
